version: "3.9"

services:
    client:
      container_name: prakticum-client
      image: prakticum-client
      build:
          context: .
          dockerfile: Dockerfile.client
          args:
            CLIENT_PORT: ${CLIENT_PORT}
      restart: always
      ports:
          - "${CLIENT_PORT}:80"
      environment:
        - CLIENT_PORT=${CLIENT_PORT}
        - SERVER_PORT=${SERVER_PORT}
    server:
      container_name: prakticum-server
      image: prakticum-server
      build:
          context: .
          dockerfile: Dockerfile.server
          args:
            SERVER_PORT: ${SERVER_PORT}
      restart: always
      depends_on:
          - postgres
      ports:
          - "${SERVER_PORT}:${SERVER_PORT}"
      environment:
        SERVER_PORT: ${SERVER_PORT}
        SERVER_HOST: ${SERVER_HOST}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_HOST: 'postgres'
      networks:
        - mynet

    nginx-proxy:
      image: nginxproxy/nginx-proxy
      container_name: nginx-proxy
      restart: always
      ports:
        - 80:80
        - 443:443
      volumes:
        - conf:/etc/nginx/conf.d
        - vhost:/etc/nginx/vhost.d
        - html:/usr/share/nginx/html
        - certs:/etc/nginx/certs:ro
        - /var/run/docker.sock:/tmp/docker.sock:ro
      networks:
        - mynet


    postgres:
      image: postgres:14     
      ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
        - ./tmp/pgdata:/var/lib/postgresql/data

    
    acme-companion:
      image: nginxproxy/acme-companion
      container_name: nginx-proxy-acme
      restart: always
      environment:
        - DEFAULT_EMAIL=mail@${APP_HOSTNAME}
      volumes_from:
        - nginx-proxy
      volumes:
        - certs:/etc/nginx/certs:rw
        - acme:/etc/acme.sh
        - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  conf:
  vhost:
  html:
  certs:
  acme:

networks:
  mynet:
    name: cosmostars_default
    external: true
